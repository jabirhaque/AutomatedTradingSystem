name: CI/CD - Automated Trading System

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set environment variables
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV
          echo "POLYGON_API_KEY=${{ secrets.POLYGON_API_KEY }}" >> $GITHUB_ENV
          echo "ALPACA_API_KEY_ID=${{ secrets.ALPACA_API_KEY_ID }}" >> $GITHUB_ENV
          echo "ALPACA_API_SECRET_KEY=${{ secrets.ALPACA_API_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

  build-and-test-ui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install UI dependencies
        working-directory: ui
        run: npm install

      - name: Build UI
        working-directory: ui
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [ build-and-test-backend, build-and-test-ui ]
    #if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build UI
        working-directory: ui
        run: npm install && npm run build

      - name: Copy UI build to backend static resources
        run: cp -r ui/dist/* ./src/main/resources/static/

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Spring Boot JAR
        working-directory: .
        run: mvn clean package -DskipTests

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only --app automatedtradingsystem
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}